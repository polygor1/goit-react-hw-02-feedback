{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics .js","components/Notification.js","components/Feedback.js","App.js","index.js","components/FeedbackOptions.module.css","components/Feedback.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","styles","buttonsList","map","item","buttonItem","onClick","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","mesage","Feedback","state","setValue","key","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","feedBack","Object","keys","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iSAIe,SAASA,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,yBAASC,UAAWC,IAAOC,YAA3B,SACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,wBAEEJ,UAAWC,IAAOI,WAClBC,QAAS,kBAAMP,EAAgBK,IAHjC,SAKGA,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,IAJ/BJ,Q,oBCLA,SAASK,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,0BAASd,UAAWC,IAAOc,WAA3B,UACE,6CACA,yCAAYL,KACZ,4CAAeC,KACf,wCAAWC,KACX,0CAAaC,KACb,sDAAyBC,EAAzB,UChBS,SAASE,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACrC,OAAO,6BAAKA,ICIP,IAAMC,EAAb,4MACEC,MAAQ,CAINT,KAAM,EACNC,QAAS,EACTC,IAAK,GAPT,EAYEQ,SAAW,SAAAC,GACT,EAAKC,UAAS,SAAAH,GAAK,sBAChBE,EAAMF,EAAME,GAAO,OAd1B,EAkBEE,mBAAqB,WACnB,OAAO,EAAKJ,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,KAnB7D,EAsBEY,gCAAkC,WAChC,OAAO,EAAKD,qBAAuB,EAC/BE,KAAKC,MAAyB,IAAlB,EAAKP,MAAMT,KAAe,EAAKa,sBAAwB,GACnE,GAzBR,4CA4BE,WACE,OACE,sBAAKvB,UAAWC,IAAO0B,SAAvB,UACE,yDAEA,cAAC9B,EAAD,CACEC,QAAS8B,OAAOC,KAAKC,KAAKX,OAC1BpB,gBAAiB+B,KAAKV,WAEO,IAA9BU,KAAKP,qBACJ,cAACP,EAAD,CAAcC,OAAO,yBAErB,cAACR,EAAD,CACEC,KAAMoB,KAAKX,MAAMT,KACjBC,QAASmB,KAAKX,MAAMR,QACpBC,IAAKkB,KAAKX,MAAMP,IAChBC,MAAOiB,KAAKP,qBACZT,mBAAoBgB,KAAKN,2CA7CrC,GAA8BO,aCKfC,MATf,WACE,OACE,sBAAKhC,UAAU,MAAf,UACE,2DACA,cAAC,EAAD,QCHNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,YAAc,qCAAqC,WAAa,sC,kBCAlFD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.0f420ed9.chunk.js","sourcesContent":["import styles from './FeedbackOptions.module.css';\n\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <section className={styles.buttonsList}>\n      {options.map(item => (\n        <button\n          key={item}\n          className={styles.buttonItem}\n          onClick={() => onLeaveFeedback(item)}\n        >\n          {item[0].toUpperCase() + item.slice(1)}\n        </button>\n      ))}\n    </section>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import styles from './Statistics.module.css';\n\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <section className={styles.statistics}>\n      <h2> Statistic </h2>\n      <div>Good: {good}</div>\n      <div>Neutral: {neutral}</div>\n      <div>Bad: {bad}</div>\n      <div>Total: {total}</div>\n      <div>Positive feedback: {positivePercentage}%</div>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ mesage }) {\n  return <h3>{mesage}</h3>;\n}\n\nNotification.propTypes = {\n  mesage: PropTypes.string,\n};\n","import styles from './Feedback.module.css';\n\nimport { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics ';\nimport Notification from './Notification';\n\nexport class Feedback extends Component {\n  state = {\n    // inimitable: 0,\n    // lovely: 0,\n    // wonderful: 0,\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    // wtf: 0,\n    // fuck: 0,\n  };\n\n  setValue = key => {\n    this.setState(state => ({\n      [key]: state[key] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback() > 0\n      ? Math.round((this.state.good * 1000) / this.countTotalFeedback()) / 10\n      : 0;\n  };\n\n  render() {\n    return (\n      <div className={styles.feedBack}>\n        <h2> Please leave feedback </h2>\n\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.setValue}\n        />\n        {this.countTotalFeedback() === 0 ? (\n          <Notification mesage=\"There is no feedback\" />\n        ) : (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport { Feedback } from './components/Feedback';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>goit-react-hw-02-feedback</h1>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsList\":\"FeedbackOptions_buttonsList__fFLDf\",\"buttonItem\":\"FeedbackOptions_buttonItem__1TBDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBack\":\"Feedback_feedBack__1wnHA\"};"],"sourceRoot":""}